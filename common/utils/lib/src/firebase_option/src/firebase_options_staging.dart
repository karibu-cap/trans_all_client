// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

import '../firebase_options.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptionsStaging implements FirebaseOptionsInterface {
  static const FirebaseOptions _web = FirebaseOptions(
    apiKey: 'AIzaSyCTObAVWPR9KJo9Z1hQpZXcHS0NQIElBRI',
    appId: '1:210743853862:web:a7ef1e7db5c11455c977e7',
    messagingSenderId: '210743853862',
    projectId: 'transtu-staging',
    authDomain: 'transtu-staging.firebaseapp.com',
    storageBucket: 'transtu-staging.appspot.com',
    measurementId: 'G-D821MTHJYF',
  );

  static const FirebaseOptions _android = FirebaseOptions(
    apiKey: 'AIzaSyBH99f9Cpe4g18gslZlNJGv6Fk_f7b_xXE',
    appId: '1:210743853862:android:34ac6fa0d1ca1c87c977e7',
    messagingSenderId: '210743853862',
    projectId: 'transtu-staging',
    storageBucket: 'transtu-staging.appspot.com',
  );

  static const FirebaseOptions _ios = FirebaseOptions(
    apiKey: 'AIzaSyDAtFJebITbIx_8Nll64l4SLIqNFKfLYCs',
    appId: '1:210743853862:ios:8e8cc9fdb83bdd9fc977e7',
    messagingSenderId: '210743853862',
    projectId: 'transtu-staging',
    storageBucket: 'transtu-staging.appspot.com',
  );

  static FirebaseOptions get _currentPlatform {
    if (kIsWeb) {
      return _web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return _android;
      case TargetPlatform.iOS:
        return _ios;
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  @override
  FirebaseOptions getOptions() {
    return _currentPlatform;
  }
}
